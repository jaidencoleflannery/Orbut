import type { ModuleInstance } from '../../module/baseModule';
import { BaseModuleInstance } from '../../module/module';
import type { ModuleContext } from '../../module/moduleContext';
import { ToolbarGroupProperties } from './toolbarProperties';
export declare class Toolbar extends BaseModuleInstance implements ModuleInstance {
    private readonly ctx;
    enabled: boolean;
    seriesType: ToolbarGroupProperties;
    annotations: ToolbarGroupProperties;
    annotationOptions: ToolbarGroupProperties;
    ranges: ToolbarGroupProperties;
    zoom: ToolbarGroupProperties;
    private dragState;
    private readonly horizontalSpacing;
    private readonly verticalSpacing;
    private readonly floatingDetectionRange;
    private readonly elements;
    private readonly positions;
    private readonly positionAlignments;
    private readonly groupCallers;
    private groupButtons;
    private readonly ariaToolbars;
    private pendingButtonToggledEvents;
    private readonly groupProxied;
    private hasNewLocale;
    constructor(ctx: ModuleContext);
    private destroyElements;
    private onHover;
    private onLeave;
    private toggleNoPointerEvents;
    private onGroupChanged;
    private onGroupButtonsChanged;
    private onLayoutComplete;
    private toggleButtonsTransition;
    private onPreDomUpdate;
    private onUpdateComplete;
    private onButtonUpdated;
    private setButtonActive;
    private setButtonChecked;
    private setButtonGroupFirstLast;
    private onButtonToggled;
    private onGroupToggled;
    private onGroupUpdated;
    private onFloatingAnchorChanged;
    private positionGroup;
    private onGroupMoved;
    private buttonRect;
    private onProxyGroupOptions;
    private createGroup;
    private createGroupButtons;
    private createAriaToolbar;
    private computeAriaOrientation;
    private toggleGroup;
    private processPendingEvents;
    private onLayoutStart;
    private refreshOuterLayout;
    private refreshLocale;
    private refreshInnerLayout;
    private refreshButtonContent;
    private toggleVisibilities;
    private translateFloatingElements;
    private renderToolbar;
    private createButtonElement;
    private getAriaToolbar;
    private updateToolbarAriaLabel;
    private expandButtonConfig;
    private updateButton;
    private onButtonPress;
    private onDragStart;
    private onDrag;
    private buttonId;
}
