import type { ModuleContext } from '../../module/moduleContext';
import { BandScale } from '../../scale/bandScale';
import type { OrdinalTimeScale } from '../../scale/ordinalTimeScale';
import { CartesianAxis } from './cartesianAxis';
export declare class CategoryAxis<S extends BandScale<string | object, number> | OrdinalTimeScale = BandScale<string | object, number>> extends CartesianAxis<S> {
    static is(value: unknown): value is CategoryAxis<any>;
    static readonly className: string;
    static readonly type: 'category' | 'ordinal-time';
    constructor(moduleCtx: ModuleContext, scale?: S);
    groupPaddingInner: number;
    paddingInner?: number;
    paddingOuter?: number;
    normaliseDataDomain(d: Array<string | object>): {
        domain: (string | object)[];
        clipped: boolean;
    };
    updateScale(domain?: any[]): void;
    private reduceBandScalePadding;
}
