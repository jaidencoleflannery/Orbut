import type { AgIconName } from 'ag-charts-types';
export declare const TOOLBAR_ALIGNMENTS: readonly ["start", "center", "end"];
export type ToolbarAlignment = (typeof TOOLBAR_ALIGNMENTS)[number];
export declare const TOOLBAR_GROUPS: readonly ["seriesType", "annotations", "annotationOptions", "ranges", "zoom"];
export type ToolbarGroup = (typeof TOOLBAR_GROUPS)[number];
export declare const TOOLBAR_GROUP_ORDERING: Record<ToolbarGroup, number>;
export declare enum ToolbarPosition {
    Top = "top",
    Left = "left",
    Right = "right",
    Bottom = "bottom",
    Floating = "floating",
    FloatingTop = "floating-top",
    FloatingBottom = "floating-bottom"
}
export declare const TOOLBAR_POSITIONS: ToolbarPosition[];
export declare function isAnimatingFloatingPosition(position: ToolbarPosition): position is ToolbarPosition.FloatingTop | ToolbarPosition.FloatingBottom;
export interface ToolbarButtonConfig {
    icon?: AgIconName;
    label?: string;
    ariaLabel?: string;
    tooltip?: string;
}
export interface ToolbarButton extends ToolbarButtonConfig {
    section?: string;
    value: any;
    id?: string;
    role?: 'button' | 'switch';
    haspopup?: boolean;
    checkedOverrides?: ToolbarButtonConfig;
}
export interface ToolbarAnchor {
    x: number;
    y: number;
    position?: 'above' | 'above-left' | 'right' | 'below';
}
