import type { Nullable } from './types';
type ElementID = string;
type BaseAttributeTypeMap = {
    role: 'figure' | 'img' | 'radio' | 'radiogroup' | 'status' | 'switch' | 'tab' | 'tablist' | 'tabpanel';
    'aria-checked': boolean;
    'aria-controls': ElementID;
    'aria-expanded': boolean;
    'aria-haspopup': boolean;
    'aria-hidden': boolean;
    'aria-label': string;
    'aria-labelledby': ElementID;
    'aria-live': 'assertive' | 'polite';
    'aria-selected': boolean;
    'data-preventdefault': boolean;
    class: string;
    id: ElementID;
    tabindex: 0 | -1;
    title: string;
};
type InputAttributeTypeMap = BaseAttributeTypeMap & {
    placeholder: string;
};
export type AttributeSet = Partial<{
    [K in keyof BaseAttributeTypeMap]: BaseAttributeTypeMap[K];
}>;
export type InputAttributeSet = Partial<{
    [K in keyof InputAttributeTypeMap]: InputAttributeTypeMap[K];
}>;
type BaseStyleTypeMap = {
    cursor: 'pointer';
    display: 'none';
    'pointer-events': 'auto' | 'none';
};
export declare function setAttribute<A extends keyof BaseAttributeTypeMap>(e: Nullable<HTMLElement>, qualifiedName: A, value: BaseAttributeTypeMap[A] | undefined): void;
export declare function setAttribute<A extends keyof InputAttributeTypeMap>(e: Nullable<HTMLTextAreaElement>, qualifiedName: A, value: InputAttributeTypeMap[A] | undefined): void;
export declare function setAttributes(e: Nullable<HTMLElement>, attrs: AttributeSet | undefined): void;
export declare function setAttributes(e: Nullable<HTMLTextAreaElement>, attrs: InputAttributeTypeMap | undefined): void;
export declare function getAttribute<A extends keyof BaseAttributeTypeMap>(e: Nullable<HTMLElement | EventTarget>, qualifiedName: A, defaultValue?: BaseAttributeTypeMap[A]): BaseAttributeTypeMap[A] | undefined;
export declare function getAttribute<A extends keyof InputAttributeTypeMap>(e: Nullable<HTMLTextAreaElement>, qualifiedName: A, defaultValue?: InputAttributeTypeMap[A]): InputAttributeTypeMap[A] | undefined;
export declare function setElementStyle<P extends keyof BaseStyleTypeMap>(e: Nullable<Pick<HTMLElement, 'style'>>, property: P, value: BaseStyleTypeMap[P] | undefined): void;
export {};
